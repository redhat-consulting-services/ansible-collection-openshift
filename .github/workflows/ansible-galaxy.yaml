name: Ansible Galaxy Build and Publish

on:
  workflow_call:
    inputs:
      path:
        description: "Path to the collection"
        required: true
        default: "."
        type: string
      push:
        description: "Push the collection to Galaxy"
        required: false
        default: false
        type: boolean
      version:
        description: "Version of the collection. The galaxy.yml will be updated with this version. A commit is not created."
        required: true
        default: "0.1.0"
        type: string
    secrets:
      galaxy_token:
        description: "Token for Ansible Galaxy"
        required: true

jobs:
  build-ansible-collection:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo apt-get update
          sudo apt-get install -y yq

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Set Ansible galaxy.yml version field
        run: |
          yq -yi '.version = "${{ inputs.version }}"' ${{ inputs.path }}/galaxy.yml

      - name: Install Ansible and dependencies
        run: |
          pip install ansible

      - name: Run Ansible collection build
        run: |
          ansible-galaxy collection build ${{ inputs.path }} --output-path ./collection_build/
          echo "================ ls -l"
          ls -l ./
          echo "================ ls -l collection_build/"
          ls -l ./collection_build/

      - name: Get collection metadata from galaxy.yml file
        id: galaxy-metadata
        env:
          ANSIBLE_GALAXY_FILE: galaxy.yml
        run: |
          echo "namespace=$(yq '.namespace' $ANSIBLE_GALAXY_FILE)"
          echo "name=$(yq '.name' $ANSIBLE_GALAXY_FILE)"
          echo "version=$(yq '.version' $ANSIBLE_GALAXY_FILE)"

      - name: Upload Ansible Collection to GitHub actions artifact
        uses: actions/upload-artifact@v4
        with:
          name: ansible-collection
          path: collection_build/
          retention-days: 1
          overwrite: true

      - name: Publish Ansible Collection
        if: ${{ inputs.push }}
        env:
          NAMESPACE: ${{ steps.galaxy-metadata.outputs.namespace }}
          NAME: ${{ steps.galaxy-metadata.outputs.name }}
          VERSION: ${{ steps.galaxy-metadata.outputs.version }}
          ANSIBLE_GALAXY_TOKEN: ${{ secrets.galaxy_token }}
        run: |
          ansible-galaxy collection publish ./collection_build/${{ env.NAMESPACE }}-${{ env.NAME }}-${{ env.VERSION }}.tar.gz --token="$ANSIBLE_GALAXY_TOKEN"
